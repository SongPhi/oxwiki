(function(a){if(typeof exports=="object"&&typeof module=="object")a(require("../../lib/codemirror"));else if(typeof define=="function"&&define.amd)define(["../../lib/codemirror"],a);else a(CodeMirror)})(function(a){"use strict";a.defineMode("dylan",function(a){var b={unnamedDefinition:["interface"],namedDefinition:["module","library","macro","C-struct","C-union","C-function","C-callable-wrapper"],typeParameterizedDefinition:["class","C-subtype","C-mapped-subtype"],otherParameterizedDefinition:["method","function","C-variable","C-address"],constantSimpleDefinition:["constant"],variableSimpleDefinition:["variable"],otherSimpleDefinition:["generic","domain","C-pointer-type","table"],statement:["if","block","begin","method","case","for","select","when","unless","until","while","iterate","profiling","dynamic-bind"],separator:["finally","exception","cleanup","else","elseif","afterwards"],other:["above","below","by","from","handler","in","instance","let","local","otherwise","slot","subclass","then","to","keyed-by","virtual"],signalingCalls:["signal","error","cerror","break","check-type","abort"]};b["otherDefinition"]=b["unnamedDefinition"].concat(b["namedDefinition"]).concat(b["otherParameterizedDefinition"]);b["definition"]=b["typeParameterizedDefinition"].concat(b["otherDefinition"]);b["parameterizedDefinition"]=b["typeParameterizedDefinition"].concat(b["otherParameterizedDefinition"]);b["simpleDefinition"]=b["constantSimpleDefinition"].concat(b["variableSimpleDefinition"]).concat(b["otherSimpleDefinition"]);b["keyword"]=b["statement"].concat(b["separator"]).concat(b["other"]);var c="[-_a-zA-Z?!*@<>$%]+";var d=new RegExp("^"+c);var e={symbolKeyword:c+":",symbolClass:"<"+c+">",symbolGlobal:"\\*"+c+"\\*",symbolConstant:"\\$"+c};var f={symbolKeyword:"atom",symbolClass:"tag",symbolGlobal:"variable-2",symbolConstant:"variable-3"};for(var g in e)if(e.hasOwnProperty(g))e[g]=new RegExp("^"+e[g]);e["keyword"]=[/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];var h={};h["keyword"]="keyword";h["definition"]="def";h["simpleDefinition"]="def";h["signalingCalls"]="builtin";var i={};var j={};["keyword","definition","simpleDefinition","signalingCalls"].forEach(function(a){b[a].forEach(function(b){i[b]=a;j[b]=h[a]})});function k(a,b,c){b.tokenize=c;return c(a,b)}function l(a,b){var c=a.peek();if(c=="'"||c=='"'){a.next();return k(a,b,n(c,"string"))}else if(c=="/"){a.next();if(a.eat("*")){return k(a,b,m)}else if(a.eat("/")){a.skipToEnd();return"comment"}else{a.skipTo(" ");return"operator"}}else if(/\d/.test(c)){a.match(/^\d*(?:\.\d*)?(?:e[+\-]?\d+)?/);return"number"}else if(c=="#"){a.next();c=a.peek();if(c=='"'){a.next();return k(a,b,n('"',"string-2"))}else if(c=="b"){a.next();a.eatWhile(/[01]/);return"number"}else if(c=="x"){a.next();a.eatWhile(/[\da-f]/i);return"number"}else if(c=="o"){a.next();a.eatWhile(/[0-7]/);return"number"}else{a.eatWhile(/[-a-zA-Z]/);return"keyword"}}else if(a.match("end")){return"keyword"}for(var g in e){if(e.hasOwnProperty(g)){var h=e[g];if(h instanceof Array&&h.some(function(b){return a.match(b)})||a.match(h))return f[g]}}if(a.match("define")){return"def"}else{a.eatWhile(/[\w\-]/);if(i[a.current()]){return j[a.current()]}else if(a.current().match(d)){return"variable"}else{a.next();return"variable-2"}}}function m(a,b){var c=false,d;while(d=a.next()){if(d=="/"&&c){b.tokenize=l;break}c=d=="*"}return"comment"}function n(a,b){return function(c,d){var e,f=false;while((e=c.next())!=null){if(e==a){f=true;break}}if(f)d.tokenize=l;return b}}return{startState:function(){return{tokenize:l,currentIndent:0}},token:function(a,b){if(a.eatSpace())return null;var c=b.tokenize(a,b);return c},blockCommentStart:"/*",blockCommentEnd:"*/"}});a.defineMIME("text/x-dylan","dylan")});
//# sourceMappingURL=dylan.min.js.map