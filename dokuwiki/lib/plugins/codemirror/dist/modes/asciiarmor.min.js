(function(a){if(typeof exports=="object"&&typeof module=="object")a(require("../../lib/codemirror"));else if(typeof define=="function"&&define.amd)define(["../../lib/codemirror"],a);else a(CodeMirror)})(function(a){"use strict";function b(a){var b=a.match(/^\s*\S/);a.skipToEnd();return b?"error":null}a.defineMode("asciiarmor",function(){return{token:function(a,c){var d;if(c.state=="top"){if(a.sol()&&(d=a.match(/^-----BEGIN (.*)?-----\s*$/))){c.state="headers";c.type=d[1];return"tag"}return b(a)}else if(c.state=="headers"){if(a.sol()&&a.match(/^\w+:/)){c.state="header";return"atom"}else{var e=b(a);if(e)c.state="body";return e}}else if(c.state=="header"){a.skipToEnd();c.state="headers";return"string"}else if(c.state=="body"){if(a.sol()&&(d=a.match(/^-----END (.*)?-----\s*$/))){if(d[1]!=c.type)return"error";c.state="end";return"tag"}else{if(a.eatWhile(/[A-Za-z0-9+\/=]/)){return null}else{a.next();return"error"}}}else if(c.state=="end"){return b(a)}},blankLine:function(a){if(a.state=="headers")a.state="body"},startState:function(){return{state:"top",type:null}}}});a.defineMIME("application/pgp","asciiarmor");a.defineMIME("application/pgp-keys","asciiarmor");a.defineMIME("application/pgp-signature","asciiarmor")});
//# sourceMappingURL=asciiarmor.min.js.map