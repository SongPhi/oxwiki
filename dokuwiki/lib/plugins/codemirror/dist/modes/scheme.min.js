(function(a){if(typeof exports=="object"&&typeof module=="object")a(require("../../lib/codemirror"));else if(typeof define=="function"&&define.amd)define(["../../lib/codemirror"],a);else a(CodeMirror)})(function(a){"use strict";a.defineMode("scheme",function(){var a="builtin",b="comment",c="string",d="atom",e="number",f="bracket";var g=2;function h(a){var b={},c=a.split(" ");for(var d=0;d<c.length;++d)b[c[d]]=true;return b}var i=h("Î» case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?");var j=h("define let letrec let* lambda");function k(a,b,c){this.indent=a;this.type=b;this.prev=c}function l(a,b,c){a.indentStack=new k(b,c,a.indentStack)}function m(a){a.indentStack=a.indentStack.prev}var n=new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\/[01]+#*)?i|[-+]?[01]+#*(?:\/[01]+#*)?@[-+]?[01]+#*(?:\/[01]+#*)?|[-+]?[01]+#*(?:\/[01]+#*)?[-+](?:[01]+#*(?:\/[01]+#*)?)?i|[-+]?[01]+#*(?:\/[01]+#*)?)(?=[()\s;"]|$)/i);var o=new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?)(?=[()\s;"]|$)/i);var p=new RegExp(/^(?:[-+]i|[-+][\da-f]+#*(?:\/[\da-f]+#*)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?@[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?[-+](?:[\da-f]+#*(?:\/[\da-f]+#*)?)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?)(?=[()\s;"]|$)/i);var q=new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)i|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)@[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)?i|(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*))(?=[()\s;"]|$)/i);function r(a){return a.match(n)}function s(a){return a.match(o)}function t(a,b){if(b===true){a.backUp(1)}return a.match(q)}function u(a){return a.match(p)}return{startState:function(){return{indentStack:null,indentation:0,mode:false,sExprComment:false}},token:function(h,k){if(k.indentStack==null&&h.sol()){k.indentation=h.indentation()}if(h.eatSpace()){return null}var n=null;switch(k.mode){case"string":var o,p=false;while((o=h.next())!=null){if(o=='"'&&!p){k.mode=false;break}p=!p&&o=="\\"}n=c;break;case"comment":var o,q=false;while((o=h.next())!=null){if(o=="#"&&q){k.mode=false;break}q=o=="|"}n=b;break;case"s-expr-comment":k.mode=false;if(h.peek()=="("||h.peek()=="["){k.sExprComment=0}else{h.eatWhile(/[^/s]/);n=b;break}default:var v=h.next();if(v=='"'){k.mode="string";n=c}else if(v=="'"){n=d}else if(v=="#"){if(h.eat("|")){k.mode="comment";n=b}else if(h.eat(/[tf]/i)){n=d}else if(h.eat(";")){k.mode="s-expr-comment";n=b}else{var w=null,x=false,y=true;if(h.eat(/[ei]/i)){x=true}else{h.backUp(1)}if(h.match(/^#b/i)){w=r}else if(h.match(/^#o/i)){w=s}else if(h.match(/^#x/i)){w=u}else if(h.match(/^#d/i)){w=t}else if(h.match(/^[-+0-9.]/,false)){y=false;w=t}else if(!x){h.eat("#")}if(w!=null){if(y&&!x){h.match(/^#[ei]/i)}if(w(h))n=e}}}else if(/^[-+0-9.]/.test(v)&&t(h,true)){n=e}else if(v==";"){h.skipToEnd();n=b}else if(v=="("||v=="["){var z="";var A=h.column(),B;while((B=h.eat(/[^\s\(\[\;\)\]]/))!=null){z+=B}if(z.length>0&&j.propertyIsEnumerable(z)){l(k,A+g,v)}else{h.eatSpace();if(h.eol()||h.peek()==";"){l(k,A+1,v)}else{l(k,A+h.current().length,v)}}h.backUp(h.current().length-1);if(typeof k.sExprComment=="number")k.sExprComment++;n=f}else if(v==")"||v=="]"){n=f;if(k.indentStack!=null&&k.indentStack.type==(v==")"?"(":"[")){m(k);if(typeof k.sExprComment=="number"){if(--k.sExprComment==0){n=b;k.sExprComment=false}}}}else{h.eatWhile(/[\w\$_\-!$%&*+\.\/:<=>?@\^~]/);if(i&&i.propertyIsEnumerable(h.current())){n=a}else n="variable"}}return typeof k.sExprComment=="number"?b:n},indent:function(a){if(a.indentStack==null)return a.indentation;return a.indentStack.indent},closeBrackets:{pairs:'()[]{}""'},lineComment:";;"}});a.defineMIME("text/x-scheme","scheme")});
//# sourceMappingURL=scheme.min.js.map